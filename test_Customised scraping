import pandas as pd
from bs4 import BeautifulSoup
import re

# Test case 1: Table with specified column exists
def scrape_table(soup, start_column_name):
          # implementation of the scrape_table function

          soup1 = BeautifulSoup('<table><tr><th>Column 1</th><th>Column 2</th></tr><tr><td>Data 1</td><td>Data 2</td></tr></table>', 'html.parser')
          start_column_name1 = 'Column 1'
          expected_output1 = pd.DataFrame([['Data 1', 'Data 2']], columns=['Column 1', 'Column 2'])
          assert scrape_table(soup1, start_column_name1).equals(expected_output1)

          # Test case 2: Table with specified column does not exist
          soup2 = BeautifulSoup('<table><tr><th>Column 1</th><th>Column 2</th></tr><tr><td>Data 1</td><td>Data 2</td></tr></table>', 'html.parser')
          start_column_name2 = 'Column 3'
          expected_output2 = None
          assert scrape_table(soup2, start_column_name2) == expected_output2

          # Test case 3: No tables exist, fallback to regex method
          soup3 = BeautifulSoup('<div>Some text</div>', 'html.parser')
          expected_output3 = pd.DataFrame([['Key', 'Value']], columns=['Key', 'Value'])
          assert scrape_table(soup3, 'Column 1') == expected_output3

          # Test case 4: Numeric data found with regex method
          soup4 = BeautifulSoup('<div>Some text: 123</div>', 'html.parser')
          expected_output4 = pd.DataFrame([['Some text', '123']], columns=['Key', 'Value'])
          assert scrape_table(soup4, 'Column 1') == expected_output4

          # Test case 5: No numeric data found with regex method
          soup5 = BeautifulSoup('<div>Some text</div>', 'html.parser')
          expected_output5 = None
          assert scrape_table(soup5, 'Column 1') == expected_output5

print("All test cases passed!")